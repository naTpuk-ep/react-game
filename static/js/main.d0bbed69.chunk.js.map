{"version":3,"sources":["interfaces.ts","constants.ts","initState.ts","network.ts","Game.ts","Components/Cell.tsx","Components/Modal.tsx","Components/Grid.tsx","sounds/swipe.mp3","Components/GameWrapper.tsx","saveGame.ts","Components/Score.tsx","Components/Menu.tsx","Components/User.tsx","getUser.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CellStates","sizes","setDifferentCell","cells","size","diffCell","setCell","getRandomCoord","some","cell","x","y","getValue","valuesArr","Math","floor","random","length","value","id","Date","now","state","NEW","initCells","cell1","cell2","db","url","getScore","axios","get","res","data","create","name","post","update","gameStates","userId","JSON","parse","localStorage","getItem","body","four","highScore","six","eight","put","Game","prevState","this","find","game","getXYCells","map","stringify","matrix","createMatrixFromCells","prevX","nextX","nextY","prevY","checkValues","Yindex","Xindex","push","canMove","isMoving","newCells","filter","DYING","INCREASE","score","IDLE","key","rotateMatrixFromDirection","moveCell","rotateMatrixToDirection","by","forEach","nextRow","currRow","MOVING","reverse","i","j","temp","_rotateMatrix","Array","from","Cell","border","useState","currValue","setCurrValue","highLight","setHighLight","cellRef","createRef","useEffect","onTransitionEnd","event","current","addEventListener","removeEventListener","className","getValueStyle","ref","onAnimationEnd","toString","style","height","width","lineHeight","left","top","Modal","type","setModal","replayHandler","exitHandler","setCanMove","onClick","undefined","Grid","props","gameState","setGameState","playSwipe","setCells","modal","delay","ms","a","Promise","resolve","setTimeout","handler","moveCells","removeAndIncreaseCells","populateField","finish","document","cellSize","transform","_","GameWrapper","volume","setVolume","newStates","setItem","saveGame","useSound","swipeSound","Score","setShowScore","scoreList","setScoreList","score4","item","sort","b","score6","score8","Menu","prevSizeHandler","nextSizeHandler","startHandler","showScore","User","setUser","setValue","error","setError","onSubmit","preventDefault","statusCode","reason","placeholder","onInput","inputValue","currentTarget","getUser","App","startState","undoMode","initState","user","play","setPlay","setSize","indexOf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d0bbed69.chunk.js","sourcesContent":["import Game from \"./Game\";\r\n\r\nexport type Size = 4 | 6 | 8;\r\n\r\nexport type ModalType = \"2048\" | \"gameover\" | \"never\" | \"user\" | undefined;\r\n\r\nexport enum CellStates {\r\n\tIDLE = \"IDLE\",\r\n\tMOVING = \"MOVING\",\r\n\tDYING = \"DYING\",\r\n\tINCREASE = \"INCREASE\",\r\n\tNEW = \"NEW\",\r\n}\r\n\r\nexport interface ICell {\r\n\tx: number;\r\n\ty: number;\r\n\tvalue: number;\r\n\tid: number;\r\n\tstate: CellStates;\r\n\tby?: ICell;\r\n}\r\n\r\nexport type Matrix = Array<Array<ICell | null>>;\r\n\r\nexport interface IGameState {\r\n\tsize: Size;\r\n\tundoMode: boolean;\r\n\tcells: ICell[];\r\n\tscore: number;\r\n\thighScore: number;\r\n\tprevState: IGameState | null;\r\n}\r\n\r\nexport type IStates = Array<IGameState>;\r\n\r\nexport interface IStartBtnProps {\r\n\tstartHandler(): void;\r\n\tgame: Game;\r\n}\r\n\r\nexport interface IGameWrapperProps {\r\n\tgameState: IGameState;\r\n\texitHandler(): void;\r\n}\r\n\r\nexport interface IMenuProps {\r\n\tprevSizeHandler(): void;\r\n\tnextSizeHandler(): void;\r\n\tstartHandler(): void;\r\n\tsize: Size;\r\n}\r\n\r\nexport interface ICellProps {\r\n\tx: number;\r\n\ty: number;\r\n\tvalue: number;\r\n\tsize: number;\r\n\tborder: number;\r\n\tstate: CellStates;\r\n}\r\n\r\nexport interface IGridProps {\r\n\tgameState: IGameState;\r\n\tsetGameState: Function;\r\n\treplayHandler(): void;\r\n\texitHandler(): void;\r\n\tplaySwipe: Function;\r\n}\r\n\r\nexport type Key = \"ArrowLeft\" | \"ArrowDown\" | \"ArrowRight\" | \"ArrowUp\";\r\n\r\nexport interface IModalProps {\r\n\ttype: ModalType;\r\n\treplayHandler(): void;\r\n\texitHandler(): void;\r\n\tsetModal: Function;\r\n\tsetCanMove: Function;\r\n}\r\n\r\nexport interface IUserProps {\r\n\tsetUser: Function;\r\n}\r\n\r\nexport interface IUser {\r\n\tname: string;\r\n\tuserId: string;\r\n}\r\n\r\nexport interface IScore {\r\n\tuserId: string;\r\n\tfour: number;\r\n\tsix: number;\r\n\teight: number;\r\n\tname: number;\r\n}\r\n\r\nexport interface IScoreProps {\r\n\tsetShowScore: Function;\r\n}","import { Size } from \"./interfaces\";\r\n\r\nexport const sizes: Size[] = [4, 6, 8];\r\n","import { sizes } from \"./constants\";\r\nimport { CellStates, ICell, IGameState, IStates, Size } from \"./interfaces\";\r\n\r\nexport const getPrevState = (size: Size) =>\r\n\tJSON.parse(localStorage.getItem(\"2048\")!).find(\r\n\t\t(game: IGameState) => game.size === size\r\n\t);\r\n\r\nexport const setDifferentCell = (cells: ICell[], size: Size): ICell => {\r\n\tconst diffCell = setCell(getRandomCoord(size), getRandomCoord(size));\r\n\tif (cells.some(cell => diffCell.x === cell.x && diffCell.y === cell.y)) {\r\n\t\treturn setDifferentCell(cells, size);\r\n\t}\r\n\treturn diffCell;\r\n};\r\n\r\nconst getValue = () => {\r\n\tconst valuesArr = [2, 2, 2, 2, 2, 2, 2, 2, 2, 4];\r\n\tconst randomIndex = Math.floor(Math.random() * valuesArr.length);\r\n\treturn valuesArr[randomIndex];\r\n};\r\n\r\nexport const getRandomCoord = (size: Size): number => Math.floor(Math.random() * size);\r\n\r\nexport const setCell = (x: number, y: number): ICell => {\r\n\treturn {\r\n\t\tx,\r\n\t\ty,\r\n\t\tvalue: getValue(),\r\n\t\tid: Date.now(),\r\n\t\tstate: CellStates.NEW,\r\n\t};\r\n};\r\n\r\n\r\nexport const initCells = (size: Size): ICell[] => {\r\n\tconst cell1: ICell = setCell(getRandomCoord(size), getRandomCoord(size));\r\n\tconst cell2: ICell = setDifferentCell([cell1], size);\r\n\tcell2.id! += 1;\r\n\r\n\treturn [cell1, cell2];\r\n};\r\n\r\nexport const initState = () => {\r\n\tif (localStorage.getItem(\"2048\")) {\r\n\t\treturn JSON.parse(localStorage.getItem(\"2048\")!);\r\n\t}\r\n\r\n\tconst state: IStates = sizes.map(size => {\r\n\t\treturn {\r\n\t\t\tsize,\r\n\t\t\tundoMode: true,\r\n\t\t\tcells: initCells(size),\r\n\t\t\tscore: 0,\r\n\t\t\thighScore: 0,\r\n\t\t\tprevState: null,\r\n\t\t};\r\n\t});\r\n\r\n\tlocalStorage.setItem(\"2048\", JSON.stringify(state));\r\n\r\n\treturn state;\r\n};\r\n\r\nexport const getValueStyle = (value: number) => {\r\n\tswitch (value) {\r\n\t\tcase 2:\r\n\t\t\treturn \"two\";\r\n\t\tcase 4:\r\n\t\t\treturn \"four\";\r\n\t\tcase 8:\r\n\t\t\treturn \"eight\";\r\n\t\tcase 16:\r\n\t\t\treturn \"sixteen\";\r\n\t\tcase 32:\r\n\t\t\treturn \"thirty\";\r\n\t\tcase 64:\r\n\t\t\treturn \"sixty\";\r\n\t\tcase 128:\r\n\t\t\treturn \"hundred\";\r\n\t\tcase 256:\r\n\t\t\treturn \"two-handred\";\r\n\t\tcase 512:\r\n\t\t\treturn \"five-hundred\";\r\n\t\tcase 1024:\r\n\t\t\treturn \"thousand\";\r\n\t\tcase 2048:\r\n\t\t\treturn \"two-thousands\";\r\n\t\tdefault:\r\n\t\t\treturn \"black\";\r\n\t}\r\n};","import axios from \"axios\";\r\nimport { IStates } from \"./interfaces\";\r\n\r\nexport const db = {\r\n\turl: \"https://react-game-be.herokuapp.com/\",\r\n\r\n\tasync getScore() {\r\n\t\tconst res = await axios.get(this.url);\r\n\t\tconst data = res.data;\r\n\t\treturn data;\r\n\t},\r\n\r\n\tasync create(name: string) {\r\n\t\tconst res = await axios.post(this.url, { name });\r\n\t\treturn res.data;\r\n\t},\r\n\r\n\tasync update(gameStates: IStates) {\r\n\t\tconst userId = JSON.parse(localStorage.getItem(\"2048-user\")!).userId;\r\n\t\tconst body = {\r\n\t\t\tuserId,\r\n\t\t\tfour: gameStates[0].highScore,\r\n\t\t\tsix: gameStates[1].highScore,\r\n\t\t\teight: gameStates[2].highScore,\r\n\t\t};\r\n\t\tconst res = await axios.put(this.url, body);\r\n\t\treturn res.data;\r\n\t},\r\n};\r\n","import { Key } from \"react\";\r\nimport { getPrevState, setDifferentCell } from \"./initState\";\r\nimport { IGameState, ICell, Matrix, CellStates } from \"./interfaces\";\r\n\r\nexport default class Game {\r\n\tprevState: IGameState;\r\n\tconstructor(public state: IGameState) {\r\n\t\tthis.prevState = getPrevState(this.state.size);\r\n\t}\r\n\r\n\tisMoving() {\r\n\t\tconst getXYCells = (cells: ICell[]) =>\r\n\t\t\tcells.map(cell => ({\r\n\t\t\t\tx: cell.x,\r\n\t\t\t\ty: cell.y,\r\n\t\t\t}));\r\n\t\treturn (\r\n\t\t\tJSON.stringify(getXYCells(this.state.cells)) !==\r\n\t\t\tJSON.stringify(getXYCells(this.prevState.cells))\r\n\t\t);\r\n\t}\r\n\r\n\tfinish() {\r\n\t\tconst { cells } = this.state;\r\n\t\tconst matrix = this.createMatrixFromCells(cells);\r\n\t\tconst canMove = () => {\r\n\t\t\tif (cells.length === this.state.size ** 2) {\r\n\t\t\t\tfor (let y = 0; y < matrix.length; y++) {\r\n\t\t\t\t\tfor (let x = 0; x < matrix.length; x++) {\r\n\t\t\t\t\t\tlet prevX = x - 1;\r\n\t\t\t\t\t\tlet nextX = x + 1;\r\n\t\t\t\t\t\tlet nextY = y + 1;\r\n\t\t\t\t\t\tlet prevY = y - 1;\r\n\t\t\t\t\t\tlet value = matrix[y][x]?.value;\r\n\t\t\t\t\t\tlet checkValues: any[] = [];\r\n\t\t\t\t\t\tfor (let Yindex of [prevY, nextY]) {\r\n\t\t\t\t\t\t\tfor (let Xindex of [prevX, nextX]) {\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\tXindex >= 0 &&\r\n\t\t\t\t\t\t\t\t\tXindex < matrix.length &&\r\n\t\t\t\t\t\t\t\t\tYindex >= 0 &&\r\n\t\t\t\t\t\t\t\t\tYindex < matrix.length\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\tcheckValues.push(matrix[y][Xindex]?.value);\r\n\t\t\t\t\t\t\t\t\tcheckValues.push(matrix[Yindex][x]?.value);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let checkValue of checkValues) {\r\n\t\t\t\t\t\t\tif (value === checkValue) {\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\treturn !canMove();\r\n\t}\r\n\r\n\tpopulateField(): ICell[] {\r\n\t\tconst cells = [...this.state.cells];\r\n\t\tif (!this.isMoving()) {\r\n\t\t\treturn cells;\r\n\t\t}\r\n\t\tthis.state.prevState = {\r\n\t\t\t...this.prevState,\r\n\t\t\tprevState: null,\r\n\t\t};\r\n\t\tconst newCells = [...cells, setDifferentCell(cells, this.state.size)];\r\n\t\tthis.state.cells = newCells;\r\n\t\treturn newCells;\r\n\t}\r\n\r\n\tremoveAndIncreaseCells(): ICell[] {\r\n\t\tconst newCells = [...this.state.cells]\r\n\t\t\t.filter(cell => cell.state !== CellStates.DYING)\r\n\t\t\t.map(cell => {\r\n\t\t\t\tif (cell.state === CellStates.INCREASE) {\r\n\t\t\t\t\tcell.value *= 2;\r\n\t\t\t\t\tthis.state.score += cell.value;\r\n\t\t\t\t\tif (this.state.highScore < this.state.score) {\r\n\t\t\t\t\t\tthis.state.highScore = this.state.score;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcell.state = CellStates.IDLE;\r\n\t\t\t\treturn cell;\r\n\t\t\t});\r\n\t\tthis.state.cells = newCells;\r\n\t\treturn newCells;\r\n\t}\r\n\r\n\tmoveCells(key: Key): ICell[] {\r\n\t\tconst cells: ICell[] = [...this.state.cells];\r\n\t\tconst matrix = this.createMatrixFromCells(cells);\r\n\t\tthis.rotateMatrixFromDirection(matrix, key);\r\n\t\tfor (let y = 0; y < this.state.size; y++) {\r\n\t\t\tfor (let x = 0; x < this.state.size; x++) {\r\n\t\t\t\tif (matrix[y][x]) {\r\n\t\t\t\t\tthis.moveCell(matrix, x, y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.rotateMatrixToDirection(matrix, key);\r\n\t\tfor (let y = 0; y < this.state.size; y++) {\r\n\t\t\tfor (let x = 0; x < this.state.size; x++) {\r\n\t\t\t\tif (matrix[y][x]) {\r\n\t\t\t\t\tmatrix[y][x]!.y = y;\r\n\t\t\t\t\tmatrix[y][x]!.x = x;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcells\r\n\t\t\t.filter(cell => cell.by)\r\n\t\t\t.forEach(cell => {\r\n\t\t\t\tcell.x = cell.by!.x!;\r\n\t\t\t\tcell.y = cell.by!.y!;\r\n\t\t\t\tdelete cell.by;\r\n\t\t\t});\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\tprivate moveCell(matrix: Matrix, x: number, y: number): void {\r\n\t\tlet nextRow = y - 1;\r\n\t\tlet currRow = y;\r\n\t\twhile (nextRow >= 0) {\r\n\t\t\tif (matrix[nextRow][x] === null) {\r\n\t\t\t\tmatrix[nextRow][x] = matrix[currRow][x];\r\n\t\t\t\tmatrix[currRow][x]!.state = CellStates.MOVING;\r\n\t\t\t\tmatrix[currRow][x] = null;\r\n\t\t\t\tcurrRow = nextRow;\r\n\t\t\t} else if (\r\n\t\t\t\tmatrix[nextRow][x]!.value === matrix[currRow][x]!.value &&\r\n\t\t\t\t(matrix[nextRow][x]!.state === CellStates.IDLE ||\r\n\t\t\t\t\tmatrix[nextRow][x]!.state === CellStates.MOVING ||\r\n\t\t\t\t\tmatrix[nextRow][x]!.state === CellStates.NEW)\r\n\t\t\t) {\r\n\t\t\t\tmatrix[nextRow][x]!.state = CellStates.DYING;\r\n\t\t\t\tmatrix[nextRow][x]!.by = matrix[currRow][x]!;\r\n\t\t\t\tmatrix[currRow][x]!.state = CellStates.INCREASE;\r\n\t\t\t\tmatrix[nextRow][x] = matrix[currRow][x];\r\n\t\t\t\tmatrix[currRow][x] = null;\r\n\t\t\t\tcurrRow = nextRow;\r\n\t\t\t} else break;\r\n\t\t\tnextRow -= 1;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _rotateMatrix(matrix: any[][]) {\r\n\t\tmatrix = matrix.reverse();\r\n\t\tfor (var i = 0; i < matrix.length; i++) {\r\n\t\t\tfor (var j = 0; j < i; j++) {\r\n\t\t\t\tvar temp = matrix[i][j];\r\n\t\t\t\tmatrix[i][j] = matrix[j][i];\r\n\t\t\t\tmatrix[j][i] = temp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate rotateMatrixFromDirection(matrix: any[][], key: Key) {\r\n\t\tswitch (key) {\r\n\t\t\tcase \"ArrowLeft\":\r\n\t\t\t\tthis._rotateMatrix(matrix);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ArrowDown\":\r\n\t\t\t\tthis._rotateMatrix(matrix);\r\n\t\t\t\tthis._rotateMatrix(matrix);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ArrowRight\":\r\n\t\t\t\tthis._rotateMatrix(matrix);\r\n\t\t\t\tthis._rotateMatrix(matrix);\r\n\t\t\t\tthis._rotateMatrix(matrix);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate rotateMatrixToDirection(matrix: any[][], key: Key) {\r\n\t\tswitch (key) {\r\n\t\t\tcase \"ArrowRight\":\r\n\t\t\t\tthis._rotateMatrix(matrix);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ArrowDown\":\r\n\t\t\t\tthis._rotateMatrix(matrix);\r\n\t\t\t\tthis._rotateMatrix(matrix);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ArrowLeft\":\r\n\t\t\t\tthis._rotateMatrix(matrix);\r\n\t\t\t\tthis._rotateMatrix(matrix);\r\n\t\t\t\tthis._rotateMatrix(matrix);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate createMatrixFromCells(cells: ICell[]): Matrix {\r\n\t\tconst matrix: Matrix = Array.from(new Array(this.state.size), () =>\r\n\t\t\tArray.from(new Array(this.state.size), () => null)\r\n\t\t);\r\n\t\tcells.forEach(cell => {\r\n\t\t\tmatrix[cell.y][cell.x] = cell;\r\n\t\t});\r\n\t\treturn matrix;\r\n\t}\r\n}\r\n\r\n","import React, { createRef, useEffect, useState } from \"react\";\r\nimport { getValueStyle } from \"../initState\";\r\nimport { CellStates, ICellProps } from \"../interfaces\";\r\n\r\nconst Cell: React.FC<ICellProps> = ({\r\n\tx,\r\n\ty,\r\n\tvalue,\r\n\tsize,\r\n\tborder,\r\n\tstate,\r\n}: ICellProps) => {\r\n\tconst [currValue, setCurrValue] = useState(value);\r\n\tconst [highLight, setHighLight] = useState(false);\r\n\tconst cellRef = createRef<HTMLDivElement>();\r\n\r\n\tconst onAnimationEnd = () => {\r\n\t\tsetHighLight(false);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (value !== currValue) {\r\n\t\t\tsetHighLight(true);\r\n\t\t}\r\n\t}, [currValue, value]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst onTransitionEnd = (event: TransitionEvent) => {\r\n\t\t\tif (value !== currValue) {\r\n\t\t\t\tsetCurrValue(value);\r\n\t\t\t}\r\n\t\t};\r\n\t\tconst cell = cellRef.current;\r\n\t\tcell?.addEventListener(\"transitionend\", onTransitionEnd);\r\n\t\treturn () => cell?.removeEventListener(\"transitionend\", onTransitionEnd);\r\n\t}, [cellRef, currValue, state, value]);\r\n\r\n\tconst className = `${getValueStyle(value)} game__cell play-cell ${\r\n\t\tstate === CellStates.MOVING || state === CellStates.INCREASE ? \"moving\" : \"\"\r\n\t} ${highLight ? \"highlight\" : \"\"} ${state === CellStates.NEW ? \"new\" : \"\"} `;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tref={cellRef}\r\n\t\t\tonAnimationEnd={onAnimationEnd}\r\n\t\t\tclassName={className}\r\n\t\t\tid={value.toString()}\r\n\t\t\tstyle={{\r\n\t\t\t\theight: `${size}px`,\r\n\t\t\t\twidth: `${size}px`,\r\n\t\t\t\tlineHeight: `${size}px`,\r\n\t\t\t\tleft: `${x * (size + 10) + border}px`,\r\n\t\t\t\ttop: `${y * (size + 10) + border}px`,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{value}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Cell;","import React from \"react\";\r\nimport { IModalProps } from \"../interfaces\";\r\n\r\nconst Modal: React.FC<IModalProps> = ({\r\n\ttype,\r\n\tsetModal,\r\n\treplayHandler,\r\n\texitHandler,\r\n\tsetCanMove,\r\n}: IModalProps) => {\r\n\tconst continueHandler = () => {\r\n\t\tsetCanMove(true);\r\n\t\tsetModal(\"never\");\r\n\t};\r\n\r\n\tif (type === \"2048\") {\r\n\t\tsetCanMove(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"modal\">\r\n\t\t\t{type === \"2048\" ? (\r\n\t\t\t\t<div className=\"modal__btns\">\r\n\t\t\t\t\t<button className=\"modal__btn\" onClick={continueHandler}>\r\n\t\t\t\t\t\tContinue\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"modal__btn\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetModal(undefined);\r\n\t\t\t\t\t\t\treplayHandler();\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tReplay\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"modal__btns\">\r\n\t\t\t\t\t<button className=\"modal__btn\" onClick={exitHandler}>\r\n\t\t\t\t\t\tEXIT\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"modal__btn\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetModal(undefined);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treplayHandler();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tREPLAY\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Modal;","import React, { useEffect, useState } from \"react\";\r\nimport Game from \"../Game\";\r\nimport { IGameState, IGridProps, ModalType } from \"../interfaces\";\r\nimport Cell from \"./Cell\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst Grid: React.FC<IGridProps> = props => {\r\n\tconst {\r\n\t\tgameState,\r\n\t\tsetGameState,\r\n\t\texitHandler,\r\n\t\treplayHandler,\r\n\t\tplaySwipe,\r\n\t} = props;\r\n\tconst [cells, setCells] = useState(gameState.cells);\r\n\tconst [canMove, setCanMove] = useState(true);\r\n\tconst { size } = gameState;\r\n\tconst [modal, setModal] = useState<ModalType>();\r\n\r\n\tconst delay = async (ms: number) => {\r\n\t\treturn new Promise(resolve => setTimeout(resolve, ms));\r\n\t};\t\r\n\r\n\tuseEffect(() => {\r\n\t\tif (cells.some(cell => cell.value === 2048) && modal !== \"never\") {\r\n\t\t\tsetModal(\"2048\");\r\n\t\t}\r\n\t}, [cells, modal]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCells(gameState.cells);\r\n\t}, [gameState]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handler = async (event: KeyboardEvent) => {\r\n\t\t\tif (\r\n\t\t\t\tevent.key === \"ArrowLeft\" ||\r\n\t\t\t\tevent.key === \"ArrowDown\" ||\r\n\t\t\t\tevent.key === \"ArrowRight\" ||\r\n\t\t\t\tevent.key === \"ArrowUp\"\r\n\t\t\t) {\r\n\t\t\t\tif (canMove) {\r\n\t\t\t\t\tconst game = new Game(gameState);\r\n\t\t\t\t\tsetCanMove(false);\r\n\t\t\t\t\tsetCells(game.moveCells(event.key));\r\n\t\t\t\t\tif (game.isMoving()) {\r\n\t\t\t\t\t\tplaySwipe();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tawait delay(100);\r\n\t\t\t\t\tsetCells(game.removeAndIncreaseCells());\r\n\t\t\t\t\tsetCells(game.populateField());\r\n\t\t\t\t\tsetGameState((state: IGameState) => ({\r\n\t\t\t\t\t\t...game.state,\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tif (game.finish()) {\r\n\t\t\t\t\t\tsetModal(\"gameover\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetCanMove(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tdocument.addEventListener(\"keydown\", handler);\r\n\t\treturn () => document.removeEventListener(\"keydown\", handler);\r\n\t}, [canMove, gameState, playSwipe, setGameState]);\r\n\r\n\tconst cellSize: number = 100;\r\n\tconst border: number = cellSize / 20;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"game\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: `${cellSize * size + (size + 1) * border * 2}px`,\r\n\t\t\t\t\theight: `${cellSize * size + (size + 1) * border * 2}px`,\r\n\t\t\t\t\ttransform: `scale(${4 / size}) translate(${\r\n\t\t\t\t\t\t(100 * (4 - size)) / 8\r\n\t\t\t\t\t}%, ${(100 * (4 - size)) / 8}%)`,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"game__background\">\r\n\t\t\t\t\t{Array.from(new Array(size ** 2), (_, i) => i).map((_, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\theight: `${cellSize}px`,\r\n\t\t\t\t\t\t\t\t\twidth: `${cellSize}px`,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"game__cell\"\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"game__background playground\">\r\n\t\t\t\t\t{cells.map(cell => (\r\n\t\t\t\t\t\t<Cell\r\n\t\t\t\t\t\t\tx={cell.x}\r\n\t\t\t\t\t\t\ty={cell.y}\r\n\t\t\t\t\t\t\tvalue={cell.value}\r\n\t\t\t\t\t\t\tkey={cell.id}\r\n\t\t\t\t\t\t\tsize={cellSize}\r\n\t\t\t\t\t\t\tborder={border}\r\n\t\t\t\t\t\t\tstate={cell.state}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{modal && modal !== \"never\" ? (\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tsetModal={setModal}\r\n\t\t\t\t\ttype={modal}\r\n\t\t\t\t\treplayHandler={replayHandler}\r\n\t\t\t\t\texitHandler={exitHandler}\r\n\t\t\t\t\tsetCanMove={setCanMove}\r\n\t\t\t\t/>\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Grid;\r\n","export default __webpack_public_path__ + \"static/media/swipe.f8765271.mp3\";","import React, { useEffect, useState } from \"react\";\r\nimport useSound from \"use-sound\";\r\nimport { initCells } from \"../initState\";\r\nimport { IGameState, IGameWrapperProps } from \"../interfaces\";\r\nimport { saveGame } from \"../saveGame\";\r\nimport Grid from \"./Grid\";\r\nimport swipeSound from \"../sounds/swipe.mp3\";\r\n\r\nconst GameWrapper: React.FC<IGameWrapperProps> = (props) => {\r\n\tconst [gameState, setGameState] = useState<IGameState>(props.gameState);\r\n\tconst { score, highScore } = gameState;\r\n\tconst [volume, setVolume] = useState(0.25);\r\n\r\n\tuseEffect(() => {\r\n\t\tsaveGame(gameState);\r\n\t}, [gameState]);;\r\n\r\n\tconst [playSwipe] = useSound(swipeSound, { volume });\r\n\r\n\tconst volumeHandler = () => {\r\n\t\tsetVolume(volume === 0.25 ? 0.5 : volume === 0.5 ? 0 : 0.25);\r\n\t};\r\n\r\n\tconst undoHandler = () => {\r\n\t\tsetGameState((state: IGameState) => {\r\n\t\t\tif (state.prevState) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state.prevState,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t});\r\n\t};\r\n\r\n\tconst replayHandler = () => {\r\n\t\tsetGameState(state => ({\r\n\t\t\t...state,\r\n\t\t\tscore: 0,\r\n\t\t\tcells: initCells(state.size),\r\n\t\t\tprevState: state,\r\n\t\t}));\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<header>\r\n\t\t\t\t<div className=\"score-container\">\r\n\t\t\t\t\t<h1 className=\"title\">2048</h1>\r\n\t\t\t\t\t<div className=\"score-block\">\r\n\t\t\t\t\t\t<div className=\"score header-item\">\r\n\t\t\t\t\t\t\t<h5>SCORE</h5>\r\n\t\t\t\t\t\t\t<h3>{score}</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"score header-item\">\r\n\t\t\t\t\t\t\t<h5>HIGH SCORE</h5>\r\n\t\t\t\t\t\t\t<h3>{highScore}</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<nav className=\"additions\">\r\n\t\t\t\t\t<div className=\"additions__left\">\r\n\t\t\t\t\t\t<button onClick={props.exitHandler} className=\"back header-item\">\r\n\t\t\t\t\t\t\t<i className=\"material-icons\">exit_to_app</i>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button onClick={volumeHandler} className=\"back header-item\">\r\n\t\t\t\t\t\t\t<i className=\"material-icons\">\r\n\t\t\t\t\t\t\t\t{volume === 0\r\n\t\t\t\t\t\t\t\t\t? \"volume_mute\"\r\n\t\t\t\t\t\t\t\t\t: volume === 0.25\r\n\t\t\t\t\t\t\t\t\t? \"volume_down\"\r\n\t\t\t\t\t\t\t\t\t: \"volume_up\"}\r\n\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"additions__right\">\r\n\t\t\t\t\t\t<button onClick={undoHandler} className=\"replay header-item\">\r\n\t\t\t\t\t\t\t<i className=\"material-icons\">undo</i>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button onClick={replayHandler} className=\"replay header-item\">\r\n\t\t\t\t\t\t\t<i className=\"material-icons\">replay</i>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\t\t\t</header>\r\n\t\t\t<Grid\r\n\t\t\t\tgameState={gameState}\r\n\t\t\t\tsetGameState={setGameState}\r\n\t\t\t\treplayHandler={replayHandler}\r\n\t\t\t\texitHandler={props.exitHandler}\r\n\t\t\t\tplaySwipe={playSwipe}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GameWrapper;\r\n","import { IGameState } from \"./interfaces\";\r\nimport { db } from \"./network\";\r\n\r\nexport const saveGame = (gameState: IGameState) => {\r\n\tconst saveStates: IGameState[] = JSON.parse(localStorage.getItem(\"2048\")!);\r\n\tconst newStates = saveStates.map(state => {\r\n\t\tif (state.size === gameState.size) {\r\n\t\t\treturn gameState;\r\n\t\t}\r\n\t\treturn state;\r\n\t});\r\n\t\r\n\tlocalStorage.setItem(\"2048\", JSON.stringify(newStates));\r\n\tdb.update(newStates);\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { IScore, IScoreProps } from \"../interfaces\";\r\nimport { db } from \"../network\";\r\n\r\nconst Score: React.FC<IScoreProps> = ({ setShowScore }: IScoreProps) => {\r\n\tconst [scoreList, setScoreList] = useState([]);\r\n\tconst getScore = async () => {\r\n\t\tconst score = await db.getScore();\r\n\t\tsetScoreList(score);\r\n\t\treturn score;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetScore();\r\n\t}, []);\r\n\r\n\tconst score4: any[] = scoreList\r\n\t\t.map((item: IScore) => ({\r\n\t\t\tname: item.name,\r\n\t\t\tvalue: item.four,\r\n\t\t}))\r\n\t\t.sort((a: any, b: any) => b.value - a.value);\r\n\r\n\tconst score6: any[] = scoreList\r\n\t\t.map((item: IScore) => ({\r\n\t\t\tname: item.name,\r\n\t\t\tvalue: item.six,\r\n\t\t}))\r\n\t\t.sort((a: any, b: any) => b.value - a.value);\r\n\r\n\tconst score8: any[] = scoreList\r\n\t\t.map((item: IScore) => ({\r\n\t\t\tname: item.name,\r\n\t\t\tvalue: item.eight,\r\n\t\t}))\r\n\t\t.sort((a: any, b: any) => b.value - a.value);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"top-score\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => setShowScore(false)}\r\n\t\t\t\t\tclassName=\"back header-item\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<i className=\"material-icons\">exit_to_app</i>\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"score-grid\">\r\n\t\t\t\t\t<div className=\"score-column\">\r\n\t\t\t\t\t\t<div className=\"score-item score-head\">4x4</div>\r\n\t\t\t\t\t\t{score4.map((item, i) =>\r\n\t\t\t\t\t\t\titem.value ? (\r\n\t\t\t\t\t\t\t\t<div key={i} className=\"score-item\">\r\n\t\t\t\t\t\t\t\t\t<span>{item.value}</span>\r\n\t\t\t\t\t\t\t\t\t<span>{item.name}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : null\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"score-column center\">\r\n\t\t\t\t\t\t<div className=\"score-item score-head\">6x6</div>\r\n\t\t\t\t\t\t{score6.map((item, i) =>\r\n\t\t\t\t\t\t\titem.value ? (\r\n\t\t\t\t\t\t\t\t<div key={i} className=\"score-item\">\r\n\t\t\t\t\t\t\t\t\t<span>{item.value}</span>\r\n\t\t\t\t\t\t\t\t\t<span>{item.name}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : null\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"score-column\">\r\n\t\t\t\t\t\t<div className=\"score-item score-head\">8x8</div>\r\n\t\t\t\t\t\t{score8.map((item, i) =>\r\n\t\t\t\t\t\t\titem.value ? (\r\n\t\t\t\t\t\t\t\t<div key={i} className=\"score-item\">\r\n\t\t\t\t\t\t\t\t\t<span>{item.value}</span>\r\n\t\t\t\t\t\t\t\t\t<span>{item.name}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : null\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"modal\"></div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Score;\r\n","import React, { useState } from \"react\";\r\nimport { IMenuProps } from '../interfaces';\r\nimport Score from \"./Score\";\r\n\r\nconst Menu: React.FC<IMenuProps> = ({\r\n\tprevSizeHandler,\r\n\tnextSizeHandler,\r\n\tstartHandler,\r\n\tsize,\r\n}: IMenuProps) => {\r\n\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst showScoreHandler = () => {\r\n\t\tsetShowScore(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{showScore ?\r\n\t\t\t\t<Score setShowScore={setShowScore} /> : null}\r\n\t\t\t\t<div className=\"menu\">\r\n\t\t\t\t\t<div className=\"menu-grid\">\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\tsize === 4 ? \"four-pic\" : size === 6 ? \"six-pic\" : \"eight-pic\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<nav className=\"size-nav\">\r\n\t\t\t\t\t\t<button onClick={prevSizeHandler}>{\"<\"}</button>\r\n\t\t\t\t\t\t<span>{`${size}x${size}`}</span>\r\n\t\t\t\t\t\t<button onClick={nextSizeHandler}>{\">\"}</button>\r\n\t\t\t\t\t</nav>\r\n\t\t\t\t\t<button className=\"menu-btn\" onClick={startHandler}>\r\n\t\t\t\t\t\tStart Game\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"menu-btn score-btn\" onClick={showScoreHandler}>High Score</button>\r\n\t\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Menu\r\n","import React, { FormEvent, useState } from \"react\";\r\nimport { IUserProps } from \"../interfaces\";\r\nimport { db } from \"../network\";\r\n\r\nconst User: React.FC<IUserProps> = ({ setUser }: IUserProps) => {\r\n\tconst [value, setValue] = useState(\"\");\r\n\tconst [error, setError] = useState(\"\");\r\n\r\n\tconst onInput = (event: FormEvent<HTMLInputElement>) => {\r\n\t\tconst inputValue = event.currentTarget.value;\r\n\t\tsetValue(inputValue);\r\n\t};\r\n\r\n\tconst onSubmit = async (event: FormEvent) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst res = await db.create(value);\r\n\t\tif (res.statusCode === 404) {\r\n\t\t\tsetError(res.reason);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst { name, userId } = res;\r\n\t\tsetUser({\r\n\t\t\tname,\r\n\t\t\tuserId,\r\n\t\t});\r\n\t\tlocalStorage.setItem(\r\n\t\t\t\"2048-user\",\r\n\t\t\tJSON.stringify({\r\n\t\t\t\tname,\r\n\t\t\t\tuserId,\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"modal\"></div>\r\n\t\t\t<form onSubmit={onSubmit} className=\"user\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tplaceholder=\"Enter Name\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tonInput={onInput}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t/>\r\n\t\t\t\t<button type=\"submit\" className=\"modal__btn\">\r\n\t\t\t\t\tConfirm\r\n\t\t\t\t</button>\r\n\t\t\t\t<span>{error}</span>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default User;\r\n","const getUser = () => {\r\n\tif (localStorage.getItem(\"2048-user\")) {\r\n\t\treturn JSON.parse(localStorage.getItem(\"2048-user\")!);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nexport default getUser;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.scss\";\r\nimport GameWrapper from \"./Components/GameWrapper\";\r\nimport Menu from \"./Components/Menu\";\r\nimport User from \"./Components/User\";\r\nimport { sizes } from \"./constants\";\r\nimport getUser from \"./getUser\";\r\nimport { initState } from \"./initState\";\r\nimport { IStates, Size } from \"./interfaces\";\r\n\r\nconst App: React.FC = () => {\r\n\tconst startState: IStates = initState();\r\n\r\n\tconst [user, setUser] = useState(getUser());\r\n\r\n\tconst [play, setPlay] = useState<boolean>(false);\r\n\tconst [size, setSize] = useState<Size>(sizes[0]);\r\n\r\n\tconst startHandler = (): void => {\r\n\t\tsetPlay(true);\r\n\t};\r\n\r\n\tconst nextSizeHandler = (): void => {\r\n\t\tsetSize(\r\n\t\t\tsizes.indexOf(size) + 1 >= sizes.length\r\n\t\t\t\t? sizes[0]\r\n\t\t\t\t: sizes[sizes.indexOf(size) + 1]\r\n\t\t);\r\n\t};\r\n\r\n\tconst prevSizeHandler = (): void => {\r\n\t\tsetSize(\r\n\t\t\tsizes.indexOf(size) === 0\r\n\t\t\t\t? sizes[sizes.length - 1]\r\n\t\t\t\t: sizes[sizes.indexOf(size) - 1]\r\n\t\t);\r\n\t};\r\n\r\n\tconst exitHandler = () => {\r\n\t\tsetPlay(false);\r\n\t};\r\n\r\n\tconst gameState = startState[sizes.indexOf(size)];\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t{play ? (\r\n\t\t\t\t<GameWrapper gameState={gameState} exitHandler={exitHandler} />\r\n\t\t\t) : (\r\n\t\t\t\t<Menu\r\n\t\t\t\t\tprevSizeHandler={prevSizeHandler}\r\n\t\t\t\t\tnextSizeHandler={nextSizeHandler}\r\n\t\t\t\t\tstartHandler={startHandler}\r\n\t\t\t\t\tsize={size}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{user ? null : <User setUser={setUser} />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}